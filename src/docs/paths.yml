paths:
  /api/auth/signup:
    post:
      tags:
        - Users
      summary: Registro de nuevo usuario.
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyNewSignUp'
        required: true
      responses:
        201: 
          description: Se registró al usuario correctamente
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/User'
        401:
          description: Campos inválidos
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/invalidSignup'
        400:
          description: Intento de registrar dos usuarios con el mismo mail
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/userAlreadyExists'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/auth/login:
    post:
      tags:
        - Users
      summary: Inicio de sesión de usuario.
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyNewLogin'
        required: true
      responses:
        200: 
          description: Se inició sesión correctamente
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/User'
        401:
          description: Campos inválidos
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/invalidLogin'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/auth/logout:
    post:
      tags:
        - Users
      summary: Cierre de sesión de usuario.
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyLogOut'
        required: true
      responses:
        200: 
          description: Se cerró sesión correctamente
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/logOut'
        500:
          description: Error al desloguearse
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/invalidLogOut'
  /api/hello:
    get:
      tags:
      - Sessions
      summary: Datos de sesión del usuario
      responses:
        200:
          description: Datos de sesión del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Sessions/Session'
        401:
          description: Prohibición de acceso a datos de sesión, falta iniciar sesión
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Sessions/unauthorized'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/categories:
    get:
      tags:
      - Categories
      summary: Lista de categorías en base de datos
      responses:
        200:
          description: Lista de categorías
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/getAllCategories'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
    post:
      tags:
        - Categories
      summary: Agregar una nueva categoría.
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyNewCategory'
        required: true
      responses:
        200: 
          description: Se agregó la categoría correctamente
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Categories/Category'
        400:
          description: Parámetros inválidos
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Categories/invalidCategoryParameters'
        401:
          description: Solo administradores tienen permiso de realizar esta solicitud
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/adminOnly'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/categories/{id}:
    get:
      tags:
      - Categories
      summary: Devolver una categoría por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID de la categoría solicitada
          schema:
            type: string
      responses:
        200:
          description: Categoría encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/Category'
        404:
          description: ID de categoría inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/categoryIdNotFound'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
    put:   
      tags:
      - Categories
      summary: Editar categoria por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a editar
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyNewCategory'
        required: true
      responses:
          200:
            description: Categoría actualizada con éxito
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Categories/Category'
          400:
            description: Faltan parámetros o son inválidos
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Categories/invalidCategoryParameters'
          401:
            description: Solo administradores tienen permiso de realizar esta solicitud
            content:
              application/json:
                schema: 
                  $ref: '#/components/schema/Users/adminOnly'
          500:
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Servers/internalServerError'
    delete:
      tags:
      - Categories
      summary: Eliminar categoría por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID de la categoría a eliminar
          schema:
            type: string
      responses:
        200:
          description: Categoría eliminada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/deleteCategoryById'
        400:
          description: Prohibición de eliminar una categoría con productos dentro
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/deleteCategoryProhibition'
        401:
          description: Solo administradores tienen permiso de realizar esta solicitud
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/adminOnly'
        404:
          description: No se encuentra la categoría con el ID ingresado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Categories/deleteCategoryIdNotFound'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/products:
    get:
      tags:
      - Products
      summary: Lista de productos en base de datos
      responses:
        200:
          description: Lista de productos
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/getAllProducts'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
    post:
      tags:
        - Products
      summary: Agregar un nuevo producto.
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyNewProduct'
        required: true
      responses:
        201: 
          description: Se agregó el producto correctamente
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Products/Product'
        400:
          description: Parámetros inválidos
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Products/invalidProductParameters'
        401:
          description: Solo administradores tienen permiso de realizar esta solicitud
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/adminOnly'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/products/category/{id}:
    get:
      tags:
      - Products
      summary: Filtrar productos por ID de categoría
      parameters:
        - in: path
          name: id
          required: true
          description: ID de la categoría de productos solicitado
          schema:
            type: string
      responses:
        200:
          description: Productos filtrados con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/getAllProducts'
        404:
          description: ID de categoría de producto inválida o categoría sin productos
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/categoryProductsNotFound'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/products/{id}:
    get:
      tags:
      - Products
      summary: Devolver un producto por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto solicitado
          schema:
            type: string
      responses:
        200:
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/Product'
        404:
          description: ID de producto inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/productIdNotFound'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
    put:   
      tags:
      - Products
      summary: Editar producto
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a editar
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyNewProduct'
        required: true
      responses:
          200:
            description: Producto actualizado con éxito
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Products/Product'
          400:
            description: Faltan parámetros o son inválidos
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Products/invalidProductParameters'
          401:
            description: Solo administradores tienen permiso de realizar esta solicitud
            content:
              application/json:
                schema: 
                  $ref: '#/components/schema/Users/adminOnly'
          500:
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/Servers/internalServerError'
    delete:
      tags:
      - Products
      summary: Eliminar producto por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a eliminar
          schema:
            type: string
      responses:
        200:
          description: Categoría eliminada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/deleteProductById'
        401:
          description: Solo administradores tienen permiso de realizar esta solicitud
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Users/adminOnly'
        404:
          description: No se encuentra el producto con el ID ingresado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/deleteProductIdNotFound'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/cart:
    get:
      tags:
      - Carts
      summary: Carrito de compras del usuario
      responses:
        200:
          description: Estado actual del carrito de compras
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/Cart'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/cart/add:
    post:
      tags:
        - Carts
      summary: Agregar un nuevo producto al carrito.
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyNewCartProduct'
        required: true
      responses:
        200: 
          description: Se agregó el producto al carrito con éxito.
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Carts/Cart'
        400:
          description: Intento de agregar un producto inexistente al carrito.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/invalidProductAdding'
        401:
          description: No hay stock o stock insuficiente
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Carts/insufficientStock'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/cart/remove:
    post:
      tags:
        - Carts
      summary: Eliminar un nuevo producto al carrito.
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyNewCartProduct'
        required: true
      responses:
        200: 
          description: Se eliminó el producto del carrito con éxito.
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Carts/Cart'
        400:
          description: Intento de eliminar un producto inexistente del carrito.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/invalidProductRemoving'
        401:
          description: Parámetros inválidos, ausencia de ID o ID de producto incorrecto
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Carts/invalidParameters'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'
  /api/cart/order:
    post:
      tags:
        - Carts
      summary: Generación de orden de compra.
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyNewOrder'
        required: true
      responses:
        200: 
          description: Generación de orden de compra con éxito
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Carts/orderCreatedWithSuccess'
        401:
          description: Generación de orden fallida
          content:
            application/json:
              schema: 
                $ref: '#/components/schema/Carts/orderCreatingFailed'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Servers/internalServerError'



